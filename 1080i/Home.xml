<?xml version="1.0" encoding="UTF-8"?>
<!-- Foundation -->
<window id="0">
    <onload>Skin.SetBool(TMDbHelper.Service)</onload>
    <defaultcontrol always="false">301</defaultcontrol>
    <onload condition="Window.Previous(VideoFullScreen.xml) | Window.Previous(MusicVisualisation.xml)">SetFocus(301)</onload>
    <onload condition="Control.HasFocus(301) | Control.HasFocus(302)">SetFocus(3992)</onload>
    <onload>RunScript(script.skinshortcuts,type=buildxml&amp;mainmenuID=301&amp;levels=1&amp;group=mainmenu|powermenu|searchmenu)</onload>
    <onload condition="String.IsEmpty(Window(Home).Property(SkinSplashStarted))">AlarmClock(SkinSplashStarted,SetProperty(SkinSplashStarted,1,home),00:01,silent,false)</onload>
    <onunload>ClearProperty(TMDbHelper.WidgetContainer,Home)</onunload>
    <controls>
        <control type="button" id="308">
            <description>Menu Jump</description>
            <include>Defs_Hidden_Button</include>
            <onfocus>SetFocus(3992)</onfocus>
            <onfocus>ClearProperty(301Click)</onfocus>
        </control>
        <control type="list" id="3700">
            <description>Hidden container for widget count</description>
            <include>Defs_Hidden_List</include>
            <content><include>skinshortcuts-submenu-1</include></content>
        </control>
        <control type="list" id="3800">
            <description>Hidden container for playlist background</description>
            <include>Defs_Hidden_List</include>
            <include content="Defs_AutoScroll"><param name="condition" value="true" /></include>
            <content>$INFO[Container(301).ListItem.Property(backgroundPlaylist)]</content>
        </control>

        <include>Home_Multi_Vertical</include>
        <include>Object_NowPlaying</include>

        <include content="Global_Overlay">
            <left>160</left>
            <visible>Control.HasFocus(302)</visible>
        </include>

        <include content="Dialog_PowerMenu">
            <param name="id" value="302" />
            <param name="header" value="$INFO[Container(301).ListItem.Label]" />
            <param name="items" value="Items_SubMenu" />
            <param name="visible" value="Control.HasFocus(302)" />
            <param name="onleft" value="SetFocus(3992)" />
            <param name="onright" value="SetFocus(3992)" />
            <param name="onback" value="SetFocus(3992)" />
            <param name="icon-visible" value="true" />
            <top>200</top>
            <left>-450</left>
            <width>450</width>
            <animation effect="slide" start="0" end="650" condition="Control.HasFocus(302)">Conditional</animation>
            <animation type="WindowClose">
                <effect type="slide" start="0" end="-160" time="400" tween="quadratic" />
                <effect type="fade" start="100" end="0" tween="cubic" easing="out" delay="0" time="400" />
            </animation>
            <animation effect="slide" end="0,-40" condition="Integer.IsLess(Container(302).NumItems,8)">Conditional</animation>
            <animation effect="slide" end="0,-40" condition="Integer.IsLess(Container(302).NumItems,7)">Conditional</animation>
            <animation effect="slide" end="0,-40" condition="Integer.IsLess(Container(302).NumItems,6)">Conditional</animation>
            <animation effect="slide" end="0,-40" condition="Integer.IsLess(Container(302).NumItems,5)">Conditional</animation>
            <animation effect="slide" end="0,-40" condition="Integer.IsLess(Container(302).NumItems,4)">Conditional</animation>
            <animation effect="slide" end="0,-40" condition="Integer.IsLess(Container(302).NumItems,3)">Conditional</animation>
            <animation effect="slide" end="0,-40" condition="Integer.IsLess(Container(302).NumItems,2)">Conditional</animation>

            <animation effect="slide" end="0,80" condition="Integer.IsGreater(Container(301).Position,0) + !Integer.IsGreater(Container(302).NumItems,7)">Conditional</animation>
            <animation effect="slide" end="0,80" condition="Integer.IsGreater(Container(301).Position,1) + !Integer.IsGreater(Container(302).NumItems,6)">Conditional</animation>
            <animation effect="slide" end="0,80" condition="Integer.IsGreater(Container(301).Position,2) + !Integer.IsGreater(Container(302).NumItems,5)">Conditional</animation>
            <animation effect="slide" end="0,80" condition="Integer.IsGreater(Container(301).Position,3) + !Integer.IsGreater(Container(302).NumItems,4)">Conditional</animation>
            <animation effect="slide" end="0,80" condition="Integer.IsGreater(Container(301).Position,4) + !Integer.IsGreater(Container(302).NumItems,3)">Conditional</animation>
            <animation effect="slide" end="0,80" condition="Integer.IsGreater(Container(301).Position,5) + !Integer.IsGreater(Container(302).NumItems,2)">Conditional</animation>
            <animation effect="slide" end="0,80" condition="Integer.IsGreater(Container(301).Position,6) + !Integer.IsGreater(Container(302).NumItems,1)">Conditional</animation>
        </include>

        <control type="image">
            <left>184</left>
            <top>312</top>
            <height>16</height>
            <width>16</width>
            <include>Animation_FadeIn_SlideUp</include>
            <visible>Control.HasFocus(302)</visible>
            <animation type="WindowClose">
                <effect type="slide" start="0" end="-160" time="400" tween="quadratic" />
                <effect type="fade" start="100" end="0" tween="cubic" easing="out" delay="0" time="400" />
            </animation>
            <texture colordiffuse="dialog_bg_100">common/arrow-menu.png</texture>
            <animation effect="slide" end="0,80" condition="Integer.IsGreater(Container(301).Position,0)">Conditional</animation>
            <animation effect="slide" end="0,80" condition="Integer.IsGreater(Container(301).Position,1)">Conditional</animation>
            <animation effect="slide" end="0,80" condition="Integer.IsGreater(Container(301).Position,2)">Conditional</animation>
            <animation effect="slide" end="0,80" condition="Integer.IsGreater(Container(301).Position,3)">Conditional</animation>
            <animation effect="slide" end="0,80" condition="Integer.IsGreater(Container(301).Position,4)">Conditional</animation>
            <animation effect="slide" end="0,80" condition="Integer.IsGreater(Container(301).Position,5)">Conditional</animation>
            <animation effect="slide" end="0,80" condition="Integer.IsGreater(Container(301).Position,6)">Conditional</animation>
        </control>

        <!-- Splash -->        
        <control type="group">
            <visible>String.IsEmpty(Skin.String(StartupPlaylist))</visible>
            <visible>String.IsEmpty(Window(Home).Property(SkinSplashStarted)) | Integer.IsEqual(Container(301).NumItems,0) | Container(301).IsUpdating</visible>
            <animation effect="fade" start="100" end="0" delay="0" time="500" tween="quadratic">Hidden</animation>
            <control type="image" description="Background">
                <include>Dimensions_Fullscreen</include>
                <texture colordiffuse="Background">common/bg.jpg</texture>
            </control>
            <control type="grouplist">
                <top>280</top>
                <align>center</align>
                <orientation>vertical</orientation>
                <control type="label">
                    <height>70</height>
                    <align>center</align>
                    <aligny>center</aligny>
                    <label>Magic [COLOR=$VAR[ColorHighlight]]Zephyr[/COLOR]</label>
                    <font>font_splash</font>
                    <textcolor>CDFFFFFF</textcolor>
                </control>
                <control type="label">
                    <height>60</height>
                    <align>center</align>
                    <aligny>top</aligny>
                    <label>Initialising Skin...</label>
                    <font>font_tiny</font>
                    <textcolor>7FFFFFFF</textcolor>
                </control>
                <control type="group">
                    <height>80</height>
                    <control type="image" description="Back">
                        <centerleft>50%</centerleft>
                        <width>80</width>
                        <aspectratio align="center" aligny="center">keep</aspectratio>
                        <texture>dialog/loading-back-busy.png</texture>
                        <colordiffuse>7FFFFFFF</colordiffuse>
                    </control>
                    <control type="image" description="Back">
                        <centerleft>50%</centerleft>
                        <width>80</width>
                        <aspectratio align="center" aligny="center">keep</aspectratio>
                        <texture>dialog/loading-back.png</texture>
                        <colordiffuse>7FFFFFFF</colordiffuse>
                    </control>
                    <control type="group">
                        <centerleft>50%</centerleft>
                        <width>80</width>
                        <animation effect="rotate" condition="true" start="0" end="360" loop="true" time="1000" center="auto">Conditional</animation>
                        <control type="image">
                            <texture colordiffuse="$VAR[ColorHighlight]">dialog/loading-spinner.png</texture>
                            <aspectratio>keep</aspectratio>
                        </control>
                        <control type="image">
                            <texture colordiffuse="$VAR[ColorHighlight3]">dialog/loading-spinner.png</texture>
                            <aspectratio>keep</aspectratio>
                            <animation effect="fade" condition="true" start="0" end="75" pulse="true" time="1000">Conditional</animation>
                        </control>
                    </control>
                </control>
            </control>
        </control>
    </controls>
</window>
