<?xml version="1.0" encoding="UTF-8"?>
<includes>

    <include name="View_Hub_HiddenList">
        <control type="list" id="302">
            <top>-1000</top>
            <left>-1000</left>
            <width>1000</width>
            <height>1</height>
            <orientation>horizontal</orientation>
            <ondown>5610</ondown>
            <itemlayout width="1"/>
            <focusedlayout width="1"/>
            <include>Items_SubMenu</include>
        </control>
    </include>

    <include name="View_Group">
        <param name="infohide" default="true" />
        <param name="animation" default="Animation_Common" />
        <param name="bottom" default="view_bottom" />
        <definition>
            <include content="View_Pad">
                <param name="bottom" value="$PARAM[bottom]" />
            </include>
            <include>$PARAM[animation]</include>
            <include condition="$PARAM[infohide]">Defs_InfoDialog_Visible</include>
        </definition>
    </include>

    <include name="View_Movement_Horizontal">
        <onright condition="Control.IsVisible(60)">60</onright>
        <onright condition="!Control.IsVisible(60)">300</onright>
        <onleft>300</onleft>
    </include>

    <include name="View_Movement_Vertical">
        <ondown condition="Control.IsVisible(60)">60</ondown>
        <ondown condition="!Control.IsVisible(60)">300</ondown>
        <onup>300</onup>
    </include>

    <include name="Panel_Movieset_Item">
        <param name="label" default="" />
        <definition>
            <control type="group">
                <width>89</width>
                <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.$PARAM[label].Art.Poster))</visible>
                <control type="image">
                    <left>3</left>
                    <top>10</top>
                    <width>79</width>
                    <height>104</height>
                    <aspectratio>stretch</aspectratio>
                    <texture diffuse="boxes/clearcases/wall_mask.png" fallback="common/blank.png" background="true">$INFO[Window(Home).Property(SkinHelper.ListItem.$PARAM[label].Art.Poster)]</texture>
                </control>
                <control type="image">
                    <left>0</left>
                    <top>0</top>
                    <width>89</width>
                    <height>120</height>
                    <aspectratio>stretch</aspectratio>
                    <texture background="true">boxes/clearcases/$INFO[Window(Home).Property(SkinHelper.ListItem.$PARAM[label].Resolution)]p.png</texture>
                </control>
            </control>
        </definition>
    </include>

    <include name="View_Cast_Toplabel">
        <param name="altid" default="999999" />
        <param name="showtitle" default="true" />
        <param name="uselabel2" default="false" />
        <param name="spinner-visible" default="true" />
        <param name="widget-type" default="infowidgets" />
        <definition>
            <control type="group" id="$PARAM[groupid]">
                <nested />
                <top>$PARAM[widget-type]_label_top</top>
                <height>$PARAM[widget-type]_item_top</height>
                <visible>Integer.IsGreater(Container($PARAM[id]).NumAllItems,0) | Container($PARAM[id]).IsUpdating</visible>
                <control type="group">
                    <top>$PARAM[widget-type]_item_top</top>
                    <height>item_cast_height</height>
                    <include content="Defs_BusySpinner">
                        <param name="label" value="$LOCALIZE[31428]..." />
                        <param name="textcolor" value="main_fg_70" />
                    </include>
                    <visible>Container($PARAM[id]).IsUpdating</visible>
                    <visible>$PARAM[spinner-visible]</visible>
                </control>
                <control type="grouplist">
                    <right>100</right>
                    <height>$PARAM[widget-type]_item_top</height>
                    <orientation>horizontal</orientation>
                    <usecontrolcoords>true</usecontrolcoords>
                    <itemgap>10</itemgap>
                    <control type="label">
                        <top>17</top>
                        <left>15</left>
                        <width>auto</width>
                        <label>$PARAM[label]</label>
                        <aligny>center</aligny>
                        <textcolor>main_fg_100</textcolor>
                        <font>font_tiny_bold</font>
                        <height>24</height>
                        <visible>Integer.IsGreater(Container($PARAM[id]).NumAllItems,0) | Container($PARAM[id]).IsUpdating</visible>
                        <visible>Control.HasFocus($PARAM[id]) | Control.HasFocus($PARAM[altid])</visible>
                    </control>
                    <control type="label">
                        <top>17</top>
                        <left>15</left>
                        <width>auto</width>
                        <label>$PARAM[label]</label>
                        <aligny>center</aligny>
                        <textcolor>main_fg_30</textcolor>
                        <font>font_tiny_bold</font>
                        <height>24</height>
                        <visible>Integer.IsGreater(Container($PARAM[id]).NumAllItems,0) | Container($PARAM[id]).IsUpdating</visible>
                        <visible>![Control.HasFocus($PARAM[id]) | Control.HasFocus($PARAM[altid])]</visible>
                    </control>
                    <control type="label">
                        <top>17</top>
                        <width>auto</width>
                        <label>|</label>
                        <aligny>center</aligny>
                        <textcolor>$VAR[ColorHighlight]</textcolor>
                        <font>font_tiny_bold</font>
                        <height>24</height>
                        <visible>Control.HasFocus($PARAM[id]) | Control.HasFocus($PARAM[altid])</visible>
                        <visible>!String.IsEmpty(Container($PARAM[id]).ListItem.Label)</visible>
                        <visible>Integer.IsGreater(Container($PARAM[id]).NumAllItems,0) + !Container($PARAM[id]).IsUpdating</visible>
                        <visible>$PARAM[showtitle]</visible>
                    </control>
                    <control type="label">
                        <top>17</top>
                        <width>auto</width>
                        <label>$PARAM[altlabel]</label>
                        <label>$INFO[Container($PARAM[id]).ListItem.Label]</label>
                        <aligny>center</aligny>
                        <textcolor>main_fg_100</textcolor>
                        <font>font_tiny</font>
                        <height>24</height>
                        <visible>Control.HasFocus($PARAM[id]) | Control.HasFocus($PARAM[altid])</visible>
                        <visible>Integer.IsGreater(Container($PARAM[id]).NumAllItems,0) + !Container($PARAM[id]).IsUpdating</visible>
                        <visible>!String.StartsWith(ListItem.FolderPath,pvr://)</visible>
                        <visible>!String.IsEqual(Container($PARAM[id]).ListItem.DBType,episode)</visible>
                        <visible>$PARAM[showtitle]</visible>
                        <visible>!$PARAM[uselabel2]</visible>
                    </control>
                    <control type="label">
                        <top>17</top>
                        <width>auto</width>
                        <label>$PARAM[altlabel]</label>
                        <label>$INFO[Container($PARAM[id]).ListItem.TvShowTitle,, - ]$INFO[Container($PARAM[id]).ListItem.Label]</label>
                        <aligny>center</aligny>
                        <textcolor>main_fg_100</textcolor>
                        <font>font_tiny</font>
                        <height>24</height>
                        <visible>Control.HasFocus($PARAM[id]) | Control.HasFocus($PARAM[altid])</visible>
                        <visible>Integer.IsGreater(Container($PARAM[id]).NumAllItems,0) + !Container($PARAM[id]).IsUpdating</visible>
                        <visible>!String.StartsWith(ListItem.FolderPath,pvr://)</visible>
                        <visible>String.IsEqual(Container($PARAM[id]).ListItem.DBType,episode)</visible>
                        <visible>$PARAM[showtitle]</visible>
                        <visible>!$PARAM[uselabel2]</visible>
                    </control>
                    <control type="label">
                        <top>17</top>
                        <width>auto</width>
                        <label>$INFO[Container($PARAM[id]).ListItem.ChannelName]$INFO[Container($PARAM[id]).ListItem.Title, - ,]$INFO[Container($PARAM[id]).ListItem.StartTime, - ,]$INFO[Container($PARAM[id]).ListItem.EndTime, - ,]</label>
                        <aligny>center</aligny>
                        <textcolor>main_fg_100</textcolor>
                        <font>font_tiny</font>
                        <height>24</height>
                        <visible>Control.HasFocus($PARAM[id]) | Control.HasFocus($PARAM[altid])</visible>
                        <visible>Integer.IsGreater(Container($PARAM[id]).NumAllItems,0) + !Container($PARAM[id]).IsUpdating</visible>
                        <visible>String.StartsWith(ListItem.FolderPath,pvr://)</visible>
                        <visible>!$PARAM[uselabel2]</visible>
                    </control>
                    <control type="label">
                        <top>17</top>
                        <width>auto</width>
                        <label>$PARAM[label2]</label>
                        <aligny>center</aligny>
                        <textcolor>main_fg_100</textcolor>
                        <font>font_tiny</font>
                        <height>24</height>
                        <visible>Control.HasFocus($PARAM[id]) | Control.HasFocus($PARAM[altid])</visible>
                        <visible>Integer.IsGreater(Container($PARAM[id]).NumAllItems,0) + !Container($PARAM[id]).IsUpdating</visible>
                        <visible>$PARAM[uselabel2]</visible>
                    </control>
                </control>
            </control>
        </definition>
    </include>

    <include name="View_Widget_LandscapeLabel">
        <include content="View_Cast_Label">
            <param name="label2" value="$PARAM[label2]" />
            <param name="bordersize" value="$PARAM[bordersize]" />
            <param name="iconheight" value="$PARAM[iconheight]" />
            <param name="diffuse" value="$PARAM[diffuse]" />
            <param name="visible" value="String.IsEqual(ListItem.DBType,episode) + !String.IsEqual(ListItem.Label,ListItem.TvShowTitle)" />
        </include>
    </include>

    <include name="View_Cast_Label">
        <param name="label2" default="ListItem.Label2" />
        <param name="bordersize" default="15" />
        <param name="visible" default="true" />
        <definition>
            <control type="group">
                <nested />
                <visible>$PARAM[visible]</visible>
                <height>$PARAM[iconheight]</height>
                <control type="image">
                    <height>200</height>
                    <bottom>0</bottom>
                    <bordersize>$PARAM[bordersize]</bordersize>
                    <texture colordiffuse="bf000000" diffuse="$PARAM[diffuse]">common/dim-actor.png</texture>
                </control>
                <control type="label">
                    <left>25</left>
                    <right>25</right>
                    <font>font_statusbar</font>
                    <textcolor>panel_fg_100</textcolor>
                    <bottom>45</bottom>
                    <height>30</height>
                    <aligny>center</aligny>
                    <align>left</align>
                    <label>$INFO[ListItem.Label]</label>
                    <visible>!String.IsEmpty($PARAM[label2]) + !String.IsEqual(ListItem.Label,$PARAM[label2])</visible>
                </control>
                <control type="label">
                    <left>25</left>
                    <right>25</right>
                    <font>font_statusbar</font>
                    <textcolor>panel_fg_70</textcolor>
                    <height>30</height>
                    <bottom>20</bottom>
                    <aligny>center</aligny>
                    <align>left</align>
                    <info>$PARAM[label2]</info>
                    <visible>!String.IsEmpty($PARAM[label2]) + !String.IsEqual(ListItem.Label,$PARAM[label2])</visible>
                </control>
                <control type="label">
                    <left>25</left>
                    <right>25</right>
                    <font>font_statusbar</font>
                    <textcolor>panel_fg_100</textcolor>
                    <bottom>20</bottom>
                    <height>30</height>
                    <aligny>center</aligny>
                    <align>left</align>
                    <label>$INFO[ListItem.Label]</label>
                    <visible>String.IsEmpty($PARAM[label2]) | String.IsEqual(ListItem.Label,$PARAM[label2])</visible>
                </control>
                <control type="label">
                    <left>25</left>
                    <right>25</right>
                    <font>font_statusbar</font>
                    <textcolor>panel_fg_70</textcolor>
                    <bottom>20</bottom>
                    <height>30</height>
                    <aligny>center</aligny>
                    <align>right</align>
                    <label>$INFO[ListItem.Duration]</label>
                    <visible>String.IsEmpty($PARAM[label2])</visible>
                </control>
            </control>
        </definition>
    </include>

    <include name="View_Cast_Job_Label">
        <include content="View_Cast_Label">
            <param name="label2" value="ListItem.Property(job)" />
            <param name="iconheight" value="$PARAM[iconheight]" />
        </include>
    </include>
    <include name="View_Cast_Character_Label">
        <include content="View_Cast_Label">
            <param name="label2" value="ListItem.Property(character)" />
            <param name="iconheight" value="$PARAM[iconheight]" />
        </include>
    </include>
    <include name="View_Cast_Video_Label">
        <param name="label2" default="ListItem.Duration" />
        <definition>
            <include content="View_Cast_Label">
                <param name="label2" value="$PARAM[label2]" />
                <param name="iconheight" value="$PARAM[iconheight]" />
            </include>
        </definition>
    </include>

    <include name="View_Vertical">
        <oninfo condition="ListItem.IsCollection">ActivateWindow(1140)</oninfo>
        <onleft>SetFocus(300)</onleft>
        <onright>60</onright>
        <orientation>vertical</orientation>
    </include>

    <include name="View_Horizontal">
        <oninfo condition="ListItem.IsCollection">ActivateWindow(1140)</oninfo>
        <onup>SetFocus(300)</onup>
        <ondown>60</ondown>
        <orientation>horizontal</orientation>
    </include>

    <include name="View_Vertical_Cast">
        <onback>8000</onback>
        <orientation>vertical</orientation>
    </include>
    <include name="View_Vertical_Back">
        <onback>8000</onback>
        <orientation>vertical</orientation>
    </include>
    <include name="View_Horizontal_Back">
        <onback>SetFocus(5050)</onback>
        <onback>8000</onback>
        <orientation>horizontal</orientation>
    </include>

    <include name="View_Settings">
        <param name="hideonwindowopen" default="!Window.IsVisible(Settings.xml)" />
        <param name="topid" default="5000" />
        <param name="bottomid" default="5100" />
        <definition>
            <control type="group">
                <include>View_Pad_Settings</include>
                <control type="group">
                    <top>-20</top>
                    <left>-100</left>
                    <right>-100</right>
                    <control type="grouplist" id="5300">
                        <top>widgets_group_top</top>
                        <height>settings_group_height</height>
                        <orientation>vertical</orientation>
                        <itemgap>widgets_group_itemgap</itemgap>
                        <usecontrolcoords>true</usecontrolcoords>
                        <scrolltime tween="quadratic">400</scrolltime>
                        <control type="group" id="5200"><height>widgets_bumper_top</height></control>
                        <animation effect="fade" start="100" end="0" time="300" condition="$PARAM[hideonwindowopen]">WindowOpen</animation>
                        <include content="Info_Widget_Poster">
                            <param name="groupid" value="5101" />
                            <param name="id" value="5100" />
                            <param name="label" value="Management" />
                            <param name="viewtype-include" value="Viewtype_Settings" />
                            <param name="widget-type" value="widgets_settings_bottom" />
                            <onup condition="Window.IsVisible(Home)">301</onup>
                            <onback condition="Window.IsVisible(Home)">301</onback>
                            <onleft condition="Window.IsVisible(Home)">301</onleft>
                            <onright condition="Window.IsVisible(Home)">noop</onright>
                            <ondown condition="Container(5000).Column(0)">SetFocus(5100,0)</ondown>
                            <ondown condition="Container(5000).Column(1)">SetFocus(5100,1)</ondown>
                            <ondown condition="Container(5000).Column(2)">SetFocus(5100,2)</ondown>
                            <ondown condition="Container(5000).Column(3)">SetFocus(5100,3)</ondown>
                            <include>Items_Settings_System</include>
                        </include>
                        <include content="Info_Widget_Poster">
                            <param name="groupid" value="5001" />
                            <param name="id" value="5000" />
                            <param name="label" value="Settings"/>
                            <param name="viewtype-include" value="Viewtype_Settings" />
                            <param name="widget-type" value="widgets_settings_top" />
                            <onback condition="Window.IsVisible(Home)">301</onback>
                            <ondown condition="Window.IsVisible(Home)">301</ondown>
                            <onleft condition="Window.IsVisible(Home)">301</onleft>
                            <onright condition="Window.IsVisible(Home)">noop</onright>
                            <onup condition="Container(5100).Column(0)">SetFocus(5000,0)</onup>
                            <onup condition="Container(5100).Column(1)">SetFocus(5000,1)</onup>
                            <onup condition="Container(5100).Column(2)">SetFocus(5000,2)</onup>
                            <onup condition="Container(5100).Column(3)">SetFocus(5000,3)</onup>
                            <include>Items_Settings_Main</include>
                        </include>
                    </control>
                </control>
            </control>
        </definition>
    </include>

    <include name="View_Pad">
        <param name="top" default="view_top" />
        <param name="bottom" default="view_pad" />
        <param name="left" default="view_pad" />
        <param name="right" default="view_pad" />
        <definition>
            <top>$PARAM[top]</top>
            <bottom>$PARAM[bottom]</bottom>
            <left>$PARAM[left]</left>
            <right>$PARAM[right]</right>
        </definition>
    </include>

    <include name="View_Pad_Settings">
        <param name="top" default="180" />
        <param name="bottom" default="80" />
        <param name="left" default="80" />
        <param name="right" default="80" />
        <definition>
            <top>$PARAM[top]</top>
            <bottom>$PARAM[bottom]</bottom>
            <left>$PARAM[left]</left>
            <right>$PARAM[right]</right>
        </definition>
    </include>

    <include name="View_WatchedOverlay">
        <control type="group">
            <visible>!Skin.HasSetting(DisableWatchedOverlay)</visible>
            <control type="image">
                <top>14</top>
                <right>14</right>
                <width>48</width>
                <height>48</height>
                <texture colordiffuse="ff000000" border="10">$VAR[Image_Overlay_Corner]</texture>
            </control>
            <control type="image">
                <top>16</top>
                <right>16</right>
                <width>24</width>
                <height>24</height>
                <texture colordiffuse="ffffffff">$VAR[Image_Overlay]</texture>
                <visible>!Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0) | ![String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,season)]</visible>
            </control>
            <control type="label">
                <top>15</top>
                <right>15</right>
                <width>28</width>
                <height>28</height>
                <font>font_unwatched</font>
                <align>center</align>
                <textcolor>ffededed</textcolor>
                <label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
                <include>View_UnwatchedEpisodes_Visible</include>
            </control>
        </control>
    </include>

    <include name="View_WatchedOverlay_Focus">
        <control type="group">
            <visible>!Skin.HasSetting(DisableWatchedOverlay)</visible>
            <control type="image">
                <top>15</top>
                <right>15</right>
                <width>48</width>
                <height>48</height>
                <texture colordiffuse="$VAR[ColorSelectBox]" border="10">$VAR[Image_Overlay_Corner]</texture>
            </control>
            <control type="image">
                <top>16</top>
                <right>16</right>
                <width>24</width>
                <height>24</height>
                <texture colordiffuse="panel_bg">$VAR[Image_Overlay_Focus]</texture>
                <visible>!Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0) | ![Container.Content(tvshows) | Container.Content(seasons) | Window.IsVisible(Home)]</visible>
            </control>
            <control type="label">
                <top>15</top>
                <right>15</right>
                <width>28</width>
                <height>28</height>
                <font>font_unwatched</font>
                <align>center</align>
                <textcolor>panel_bg</textcolor>
                <label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
                <include>View_UnwatchedEpisodes_Visible</include>
            </control>
        </control>
    </include>

    <include name="View_UnwatchedEpisodes_Visible">
        <visible>Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0) + [String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,season)]</visible>
        <visible>!ListItem.IsCollection</visible>
    </include>

    <include name="View_List_Selectbox">
        <param name="gradient" default="true" />
        <definition>
            <control type="group">
                <visible>Control.HasFocus($PARAM[id]) | Control.HasFocus($PARAM[altid])</visible>
                <animation type="Focus" condition="!Skin.HasSetting(BounceAnimations) + Container($PARAM[id]).OnNext" reversible="false">
                    <effect type="slide" start="0,-50" end="0,0" time="300" tween="back" easing="out" />
                </animation>
                <animation type="Focus" condition="!Skin.HasSetting(BounceAnimations) + Container($PARAM[id]).OnPrevious" reversible="false">
                    <effect type="slide" start="0,50" end="0,0" time="300" tween="back" easing="out" />
                </animation>
                <control type="group">
                    <height>50%</height>
                    <visible>!Container($PARAM[id]).Position(0) + ![Container($PARAM[id]).Position(1) + Integer.IsLess(Container($PARAM[id]).NumAllItems,7)] + ![Container($PARAM[id]).Position(2) + Integer.IsLess(Container($PARAM[id]).NumAllItems,5)] + ![Container($PARAM[id]).Position(3) + Integer.IsLess(Container($PARAM[id]).NumAllItems,3)]</visible>
                    <control type="image">
                        <texture colordiffuse="$VAR[ColorHighlight2]" border="10">common/white.png</texture>
                    </control>
                    <control type="image">
                        <texture colordiffuse="$VAR[ColorHighlight3]" border="10">common/white-gradient.png</texture>
                    </control>
                </control>
                <control type="group">
                    <bottom>0</bottom>
                    <height>50%</height>
                    <visible>!Container($PARAM[id]).Position(6)</visible>
                    <control type="image">
                        <texture colordiffuse="$VAR[ColorHighlight2]" border="10">common/white.png</texture>
                    </control>
                    <control type="image">
                        <texture colordiffuse="$VAR[ColorHighlight3]" border="10">common/white-gradient.png</texture>
                    </control>
                </control>
                <control type="group">
                    <control type="image">
                        <texture colordiffuse="$VAR[ColorHighlight2]" border="10">common/box.png</texture>
                    </control>
                    <control type="image">
                        <texture colordiffuse="$VAR[ColorHighlight3]" border="10">common/box-gradient.png</texture>
                    </control>
                </control>
                <nested />
            </control>
        </definition>
    </include>

    <include name="View_Selectbox">
        <param name="overlay" default="true" />
        <param name="pad" default="-12" />
        <param name="colordiffuse" default="$VAR[ColorSelectBox]" />
        <param name="focusbounce" default="true" />
        <param name="focusbounce-conditional" default="false" />
        <param name="gradient" default="true" />
        <definition>
            <control type="group">
                
                <animation type="Focus" condition="$PARAM[focusbounce]">
                    <effect type="zoom" start="96.5" end="100" time="150" tween="sine" easing="inout" center="auto"/>
                    <effect type="fade" start="20" end="100" time="150" tween="back" easing="out"/>
                </animation>
                <control type="group">
                    <include content="Defs_Pad">
                        <param name="pad" value="$PARAM[pad]" />
                    </include>
                    <control type="image">
                        <bordersize>20</bordersize>
                        <bordertexture border="32" colordiffuse="Shadow">common/shadow-20.png</bordertexture>
                        <texture border="20" colordiffuse="$PARAM[colordiffuse]">common/selectbox.png</texture>
                    </control>
                    <control type="image">
                        <bordersize>20</bordersize>
                        <texture colordiffuse="$VAR[ColorSelectBox2]" border="20">common/selectbox-gradient.png</texture>
                        <visible>$PARAM[gradient]</visible>
                    </control>
                </control>
                <include condition="$PARAM[overlay]">View_WatchedOverlay_Focus</include>
                <nested />
            </control>
        </definition>
    </include>

</includes>

