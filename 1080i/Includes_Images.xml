<?xml version="1.0" encoding="UTF-8"?>
<includes>

    <variable name="Image_SkinLogo">
        <value condition="!String.IsEmpty(Skin.String(SkinLogo))">$INFO[Skin.String(SkinLogo)]</value>
        <value>special://skin/extras/icons/kodi.png</value>
    </variable>

    <variable name="Image_ClearArt_Widget">
        <value condition="Skin.HasSetting(DisableClearArt)">common/null.png</value>
        <value condition="!String.IsEmpty(ListItem.Art(clearart))">$INFO[ListItem.Art(clearart)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.clearart))">$INFO[ListItem.Art(tvshow.clearart)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.clearlogo))">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
    </variable>

    <variable name="Image_ClearArt">
        <value condition="Skin.HasSetting(DisableClearArt)">common/null.png</value>
        <value condition="Control.IsVisible(56) + !String.IsEmpty(Container(560).ListItem.Art(clearart))">$INFO[Container(560).ListItem.Art(clearart)]</value>
        <value condition="Control.IsVisible(56) + !String.IsEmpty(Container(560).ListItem.Art(tvshow.clearart))">$INFO[Container(560).ListItem.Art(tvshow.clearart)]</value>
        <value condition="Control.IsVisible(56) + !String.IsEmpty(Container(560).ListItem.Art(artist.clearart))">$INFO[Container(560).ListItem.Art(artist.clearart)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(clearart))">$INFO[ListItem.Art(clearart)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.clearart))">$INFO[ListItem.Art(tvshow.clearart)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(artist.clearart))">$INFO[ListItem.Art(artist.clearart)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.clearart))">$INFO[Window(Home).Property(TMDbHelper.ListItem.clearart)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.tvshow.clearart))">$INFO[Window(Home).Property(TMDbHelper.ListItem.tvshow.clearart)]</value>
    </variable>

    <variable name="Image_DiscArt">
        <value condition="Control.IsVisible(56) + !String.IsEmpty(Container(560).ListItem.Art(discart))">$INFO[Container(560).ListItem.Art(discart)]</value>
        <value condition="Control.IsVisible(56) + !String.IsEmpty(Container(560).ListItem.Art(tvshow.discart))">$INFO[Container(560).ListItem.Art(tvshow.discart)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(discart))">$INFO[ListItem.Art(discart)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.discart))">$INFO[ListItem.Art(tvshow.discart)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.discart))">$INFO[Window(Home).Property(TMDbHelper.ListItem.discart)]</value>
    </variable>

    <variable name="Image_Actor">
        <value condition="!String.IsEmpty(ListItem.Icon) + !String.StartsWith(ListItem.Icon,Default)">$INFO[ListItem.Icon]</value>
        <value condition="!String.IsEmpty(Container(19001).ListItem.Icon) + !Container(19001).IsUpdating">$INFO[Container(19001).ListItem.Icon]</value>
    </variable>

    <variable name="Image_Home_CornerIcon">
        <value condition="String.IsEqual(Skin.String(CornerIcon),Settings)">special://skin/extras/icons/settings.png</value>
        <value condition="String.IsEqual(Skin.String(CornerIcon),Power)">special://skin/extras/icons/power.png</value>
        <value condition="String.IsEqual(Skin.String(CornerIcon),Home)">special://skin/extras/icons/home.png</value>
        <value>special://skin/extras/icons/search.png</value>
    </variable>

    <variable name="Image_UpNext">
        <value condition="!String.IsEmpty(Window.Property(landscape))">$INFO[Window.Property(landscape)]</value>
        <value condition="!String.IsEmpty(Window.Property(fanart))">$INFO[Window.Property(fanart)]</value>
        <value condition="!String.IsEmpty(Window.Property(thumb))">$INFO[Window.Property(thumb)]</value>
    </variable>

    <variable name="Image_Info_PlayButton">
        <value condition="String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,season)">special://skin/extras/icons/folder.png</value>
        <value>special://skin/extras/icons/play3.png</value>
    </variable>

    <variable name="Image_Home_Clearlogo">
        <value condition="!String.IsEmpty(Container(5600).ListItem.Art(tvshow.clearlogo))">$INFO[Container(5600).ListItem.Art(tvshow.clearlogo)]</value>
        <value condition="!String.IsEmpty(Container(5600).ListItem.Art(clearlogo))">$INFO[Container(5600).ListItem.Art(clearlogo)]</value>
    </variable>

    <variable name="Image_AddonInfo_Enable">
        <value condition="String.IsEqual(Control.GetLabel(7),$LOCALIZE[24021])">special://skin/extras/icons/enabled.png</value>
        <value>special://skin/extras/icons/disabled.png</value>
    </variable>

    <variable name="Image_AddonInfo_Install">
        <value condition="String.IsEqual(Control.GetLabel(6),$LOCALIZE[24037])">special://skin/extras/icons/uninstall.png</value>
        <value>special://skin/extras/icons/download.png</value>
    </variable>

    <variable name="Image_NowPlaying">
        <value condition="Player.Caching"></value>
        <value condition="Player.Paused">buttons/pause.png</value>
        <value condition="!Player.Paused">buttons/play.png</value>
    </variable>

    <variable name="Image_RipSource">
        <value condition="String.Contains(ListItem.FileNameAndPath,2160p) | String.Contains(ListItem.FileNameAndPath,UHD) | String.Contains(ListItem.FileNameAndPath,UltraHD) | String.Contains(ListItem.FileNameAndPath,Ultra-HD) | String.Contains(ListItem.FileNameAndPath,4K)">flags/$VAR[Defs_ColorMode_Dir]/other/4K.png</value>
        <value condition="String.Contains(ListItem.FileNameAndPath,blu-ray) | String.Contains(ListItem.FileNameAndPath,bluray) | String.Contains(ListItem.FileNameAndPath,bdrip) | String.Contains(ListItem.FileNameAndPath,bd25) | String.Contains(ListItem.FileNameAndPath,bd50)">flags/$VAR[Defs_ColorMode_Dir]/other/bluray.png</value>
        <value condition="String.Contains(ListItem.FileNameAndPath,hddvd) | String.Contains(ListItem.FileNameAndPath,hd-dvd)">flags/$VAR[Defs_ColorMode_Dir]/other/hddvd.png</value>
        <value condition="String.Contains(ListItem.FileNameAndPath,dvd)">flags/$VAR[Defs_ColorMode_Dir]/other/dvd.png</value>
        <value condition="String.Contains(ListItem.FileNameAndPath,hdtv) | String.Contains(ListItem.FileNameAndPath,pdtv) | String.Contains(ListItem.FileNameAndPath,dsr)">flags/$VAR[Defs_ColorMode_Dir]/other/hdtv.png</value>
        <value condition="String.Contains(ListItem.FileNameAndPath,sdtv)">flags/$VAR[Defs_ColorMode_Dir]/other/sdtv.png</value>
        <value condition="String.Contains(ListItem.FileNameAndPath,web-dl) | String.Contains(ListItem.FileNameAndPath,webdl) | String.Contains(ListItem.FileNameAndPath,WEBRip)">flags/$VAR[Defs_ColorMode_Dir]/other/web-dl.png</value>
    </variable>

    <variable name="Image_AudioCodec">
        <value condition="String.Contains(ListItem.FileNameAndPath,atmos)">flags/$VAR[Defs_ColorMode_Dir]/audio/atmos.png</value>
        <value condition="String.Contains(ListItem.FileNameAndPath,dtsx) | String.Contains(ListItem.FileNameAndPath,dts-x) | String.Contains(ListItem.FileNameAndPath,dts:x)">flags/$VAR[Defs_ColorMode_Dir]/audio/dtsx.png</value>
        <value>flags/$VAR[Defs_ColorMode_Dir]/audio/$INFO[ListItem.AudioCodec].png</value>
    </variable>


    <variable name="Image_VideoPlayer_RipSource">
        <value condition="String.Contains(Player.FileNameAndPath,2160p) | String.Contains(Player.FileNameAndPath,UHD) | String.Contains(Player.FileNameAndPath,UltraHD) | String.Contains(Player.FileNameAndPath,Ultra-HD) | String.Contains(Player.FileNameAndPath,4K)">flags/$VAR[Defs_ColorMode_Dir]/other/4K.png</value>
        <value condition="String.Contains(Player.FileNameAndPath,blu-ray) | String.Contains(Player.FileNameAndPath,bluray) | String.Contains(Player.FileNameAndPath,bdrip) | String.Contains(Player.FileNameAndPath,bd25) | String.Contains(Player.FileNameAndPath,bd50)">flags/$VAR[Defs_ColorMode_Dir]/other/bluray.png</value>
        <value condition="String.Contains(Player.FileNameAndPath,hddvd) | String.Contains(Player.FileNameAndPath,hd-dvd)">flags/$VAR[Defs_ColorMode_Dir]/other/hddvd.png</value>
        <value condition="String.Contains(Player.FileNameAndPath,dvd)">flags/$VAR[Defs_ColorMode_Dir]/other/dvd.png</value>
        <value condition="String.Contains(Player.FileNameAndPath,hdtv) | String.Contains(Player.FileNameAndPath,pdtv) | String.Contains(Player.FileNameAndPath,dsr)">flags/$VAR[Defs_ColorMode_Dir]/other/hdtv.png</value>
        <value condition="String.Contains(Player.FileNameAndPath,sdtv)">flags/$VAR[Defs_ColorMode_Dir]/other/sdtv.png</value>
        <value condition="String.Contains(Player.FileNameAndPath,web-dl) | String.Contains(Player.FileNameAndPath,webdl) | String.Contains(Player.FileNameAndPath,WEBRip)">flags/$VAR[Defs_ColorMode_Dir]/other/web-dl.png</value>
    </variable>

    <variable name="Image_VideoPlayer_AudioCodec">
        <value condition="String.Contains(Player.FileNameAndPath,atmos)">flags/$VAR[Defs_ColorMode_Dir]/audio/atmos.png</value>
        <value condition="String.Contains(Player.FileNameAndPath,dtsx) | String.Contains(Player.FileNameAndPath,dts-x) | String.Contains(Player.FileNameAndPath,dts:x)">flags/$VAR[Defs_ColorMode_Dir]/audio/dtsx.png</value>
        <value>flags/$VAR[Defs_ColorMode_Dir]/audio/$INFO[VideoPlayer.AudioCodec,,.png]</value>
    </variable>

    <variable name="Image_OSD_Artwork">
        <value condition="!String.IsEmpty(Player.Art(tvshow.poster))">$INFO[Player.Art(tvshow.poster)]</value>
        <value condition="!String.IsEmpty(Player.Art(poster))">$INFO[Player.Art(poster)]</value>
        <value>$INFO[VideoPlayer.Cover]</value>
    </variable>

    <variable name="Image_ArtistFanartVis">
        <value condition="System.HasAddon(script.artistslideshow) + !Skin.HasSetting(ArtistSlideShow.Disabled) + !String.IsEmpty(Window(Visualisation).Property(ArtistSlideshow.Image))">$INFO[Window(Visualisation).Property(ArtistSlideshow.Image)]</value>
        <value condition="[!System.HasAddon(script.artistslideshow) | Skin.HasSetting(ArtistSlideShow.Disabled)] + Skin.HasSetting(musicvis.fanartfallback) + !String.IsEmpty(Player.Art(fanart))">$INFO[Player.Art(fanart)]</value>
        <value>common/null.png</value>
    </variable>

    <variable name="Image_AutoUpdate">
        <value condition="String.Contains(Control.GetLabel(13),*)">special://skin/extras/icons/antenna-on.png</value>
        <value>special://skin/extras/icons/antenna.png</value>
    </variable>

    <variable name="Image_AddonImage">
        <value condition="!String.IsEmpty(Container.PluginName) + !String.EndsWith(ListItem.Icon,icon.png)">special://home/addons/$INFO[Container.PluginName]/icon.png</value>
        <value condition="String.EndsWith(ListItem.Icon,icon.png)">$INFO[ListItem.Icon]</value>
    </variable>

    <variable name="Image_ClearLogo">
        <value condition="!String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.clearlogo))">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(artist.clearlogo))">$INFO[ListItem.Art(artist.clearlogo)]</value>
    </variable>

    <variable name="Image_Home_ClearLogo">
        <value condition="!String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.clearlogo))">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(artist.clearlogo))">$INFO[ListItem.Art(artist.clearlogo)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.clearlogo))">$INFO[Window(Home).Property(TMDbHelper.ListItem.clearlogo)]</value>
    </variable>

    <variable name="Image_TopBar_ClearLogo">
        <value condition="!String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.clearlogo))">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
    </variable>

    <variable name="Image_Watched">
        <value condition="System.Setting(hidewatched)">special://skin/extras/icons/watched-hide.png</value>
        <value>special://skin/extras/icons/watched-show.png</value>
    </variable>
    <variable name="Image_Filtered">
        <value condition="Container.Filtered">special://skin/extras/icons/filter-on.png</value>
        <value>special://skin/extras/icons/filter-off.png</value>
    </variable>

    <variable name="Image_GenreIcons">
        <value>$VAR[Image_GenreIcons_Path]$INFO[ListItem.Label,,.png]</value>
    </variable>

    <variable name="Image_GenreIcons_Path">
        <value condition="System.HasAddon(resource.images.moviegenreicons.horizon)">resource://resource.images.moviegenreicons.horizon/</value>
        <value condition="System.HasAddon(resource.images.moviegenreicons.transparent)">resource://resource.images.moviegenreicons.transparent/</value>
    </variable>

    <variable name="Image_Overlay_List">
        <value condition="ListItem.IsPlaying">indicator/play.png</value>
        <value condition="ListItem.IsResumable + Integer.IsGreater(ListItem.PercentPlayed,66)">indicator/inprogress-75.png</value>
        <value condition="ListItem.IsResumable + Integer.IsGreater(ListItem.PercentPlayed,33)">indicator/inprogress-50.png</value>
        <value condition="ListItem.IsResumable">indicator/inprogress-25.png</value>
        <value condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png) | [Integer.IsGreater(ListItem.PlayCount,0) + !String.IsEqual(ListItem.DBType,song) + !String.IsEqual(ListItem.DBType,album) + !String.IsEqual(ListItem.DBType,artist) + !String.IsEqual(ListItem.DBType,image) + !String.IsEqual(ListItem.DBType,addon)]">indicator/checkmark-fo.png</value>
        <value condition="[String.StartsWith(ListItem.Overlay,OverlayUnwatched.png) + [[String.IsEqual(ListItem.DBType,movie) + [String.IsEqual(Window(Home).Property(LatestMovie.1.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.2.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.3.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.4.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.5.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.6.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.7.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.8.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.9.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.10.Title),ListItem.Label)]] | [[String.IsEqual(ListItem.DBType,tvshow)] + [String.IsEqual(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.TvShowTitle)]] | [String.IsEqual(ListItem.DBType,episode) + [String.IsEqual(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem.Title)]]]]">indicator/new-fo.png</value>
        <value condition="String.StartsWith(ListItem.FolderPath,plugin://) + !String.IsEmpty(ListItem.DBID)">indicator/library.png</value>
        <value condition="ListItem.IsCollection">indicator/movieset.png</value>
        <value condition="ListItem.IsFolder">indicator/folder.png</value>
        <value>indicator/library.png</value>
    </variable>

    <variable name="Image_Overlay">
        <!-- <value condition="ListItem.IsPlaying">indicator/play.png</value> -->
        <value condition="ListItem.IsResumable + Integer.IsGreater(ListItem.PercentPlayed,66)">indicator/inprogress-75.png</value>
        <value condition="ListItem.IsResumable + Integer.IsGreater(ListItem.PercentPlayed,33)">indicator/inprogress-50.png</value>
        <value condition="ListItem.IsResumable">indicator/inprogress-25.png</value>
        <value condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png) | [Integer.IsGreater(ListItem.PlayCount,0) + !String.IsEqual(ListItem.DBType,song) + !String.IsEqual(ListItem.DBType,album) + !String.IsEqual(ListItem.DBType,artist) + !String.IsEqual(ListItem.DBType,image) + !String.IsEqual(ListItem.DBType,addon)]">indicator/checkmark.png</value>
        <value condition="[String.StartsWith(ListItem.Overlay,OverlayUnwatched.png) + [[String.IsEqual(ListItem.DBType,movie) + [String.IsEqual(Window(Home).Property(LatestMovie.1.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.2.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.3.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.4.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.5.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.6.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.7.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.8.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.9.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.10.Title),ListItem.Label)]] | [[String.IsEqual(ListItem.DBType,tvshow)] + [String.IsEqual(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.TvShowTitle)]] | [String.IsEqual(ListItem.DBType,episode) + [String.IsEqual(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem.Title)]]]]">indicator/new.png</value>
        <value condition="String.StartsWith(ListItem.FolderPath,plugin://) + !String.IsEmpty(ListItem.DBID)">indicator/library.png</value>
        <value condition="ListItem.IsCollection">indicator/movieset.png</value>
        <value condition="String.IsEqual(ListItem.Label2,Enabled)">indicator/checkmark.png</value>
        <value condition="String.EndsWith(ListItem.Label2, 67%) | String.EndsWith(ListItem.Label2, 68%) | String.EndsWith(ListItem.Label2, 69%) | String.EndsWith(ListItem.Label2, 70%) | String.EndsWith(ListItem.Label2, 71%) | String.EndsWith(ListItem.Label2, 72%) | String.EndsWith(ListItem.Label2, 73%) | String.EndsWith(ListItem.Label2, 74%) | String.EndsWith(ListItem.Label2, 75%) | String.EndsWith(ListItem.Label2, 76%) | String.EndsWith(ListItem.Label2, 77%) | String.EndsWith(ListItem.Label2, 78%) | String.EndsWith(ListItem.Label2, 79%) | String.EndsWith(ListItem.Label2, 80%) | String.EndsWith(ListItem.Label2, 81%) | String.EndsWith(ListItem.Label2, 82%) | String.EndsWith(ListItem.Label2, 83%) | String.EndsWith(ListItem.Label2, 84%) | String.EndsWith(ListItem.Label2, 85%) | String.EndsWith(ListItem.Label2, 86%) | String.EndsWith(ListItem.Label2, 87%) | String.EndsWith(ListItem.Label2, 88%) | String.EndsWith(ListItem.Label2, 89%) | String.EndsWith(ListItem.Label2, 90%) | String.EndsWith(ListItem.Label2, 91%) | String.EndsWith(ListItem.Label2, 92%) | String.EndsWith(ListItem.Label2, 93%) | String.EndsWith(ListItem.Label2, 94%) | String.EndsWith(ListItem.Label2, 95%) | String.EndsWith(ListItem.Label2, 96%) | String.EndsWith(ListItem.Label2, 97%) | String.EndsWith(ListItem.Label2, 98%) | String.EndsWith(ListItem.Label2, 99%) | String.EndsWith(ListItem.Label2, 100%)">indicator/inprogress-75.png</value>
        <value condition="String.EndsWith(ListItem.Label2, 34%) | String.EndsWith(ListItem.Label2, 35%) | String.EndsWith(ListItem.Label2, 36%) | String.EndsWith(ListItem.Label2, 37%) | String.EndsWith(ListItem.Label2, 38%) | String.EndsWith(ListItem.Label2, 39%) | String.EndsWith(ListItem.Label2, 40%) | String.EndsWith(ListItem.Label2, 41%) | String.EndsWith(ListItem.Label2, 42%) | String.EndsWith(ListItem.Label2, 43%) | String.EndsWith(ListItem.Label2, 44%) | String.EndsWith(ListItem.Label2, 45%) | String.EndsWith(ListItem.Label2, 46%) | String.EndsWith(ListItem.Label2, 47%) | String.EndsWith(ListItem.Label2, 48%) | String.EndsWith(ListItem.Label2, 49%) | String.EndsWith(ListItem.Label2, 50%) | String.EndsWith(ListItem.Label2, 51%) | String.EndsWith(ListItem.Label2, 52%) | String.EndsWith(ListItem.Label2, 53%) | String.EndsWith(ListItem.Label2, 54%) | String.EndsWith(ListItem.Label2, 55%) | String.EndsWith(ListItem.Label2, 56%) | String.EndsWith(ListItem.Label2, 57%) | String.EndsWith(ListItem.Label2, 58%) | String.EndsWith(ListItem.Label2, 59%) | String.EndsWith(ListItem.Label2, 60%) | String.EndsWith(ListItem.Label2, 61%) | String.EndsWith(ListItem.Label2, 62%) | String.EndsWith(ListItem.Label2, 63%) | String.EndsWith(ListItem.Label2, 64%) | String.EndsWith(ListItem.Label2, 65%) | String.EndsWith(ListItem.Label2, 66%)">indicator/inprogress-50.png</value>
        <value condition="String.EndsWith(ListItem.Label2, 0%) | String.EndsWith(ListItem.Label2, 1%) | String.EndsWith(ListItem.Label2, 2%) | String.EndsWith(ListItem.Label2, 3%) | String.EndsWith(ListItem.Label2, 4%) | String.EndsWith(ListItem.Label2, 5%) | String.EndsWith(ListItem.Label2, 6%) | String.EndsWith(ListItem.Label2, 7%) | String.EndsWith(ListItem.Label2, 8%) | String.EndsWith(ListItem.Label2, 9%) | String.EndsWith(ListItem.Label2, 10%) | String.EndsWith(ListItem.Label2, 11%) | String.EndsWith(ListItem.Label2, 12%) | String.EndsWith(ListItem.Label2, 13%) | String.EndsWith(ListItem.Label2, 14%) | String.EndsWith(ListItem.Label2, 15%) | String.EndsWith(ListItem.Label2, 16%) | String.EndsWith(ListItem.Label2, 17%) | String.EndsWith(ListItem.Label2, 18%) | String.EndsWith(ListItem.Label2, 19%) | String.EndsWith(ListItem.Label2, 20%) | String.EndsWith(ListItem.Label2, 21%) | String.EndsWith(ListItem.Label2, 22%) | String.EndsWith(ListItem.Label2, 23%) | String.EndsWith(ListItem.Label2, 24%) | String.EndsWith(ListItem.Label2, 25%) | String.EndsWith(ListItem.Label2, 26%) | String.EndsWith(ListItem.Label2, 27%) | String.EndsWith(ListItem.Label2, 28%) | String.EndsWith(ListItem.Label2, 29%) | String.EndsWith(ListItem.Label2, 30%) | String.EndsWith(ListItem.Label2, 31%) | String.EndsWith(ListItem.Label2, 32%) | String.EndsWith(ListItem.Label2, 33%)">indicator/inprogress-25.png</value>
    </variable>
    <variable name="Image_Overlay_Focus">
        <!-- <value condition="ListItem.IsPlaying">indicator/play.png</value> -->
        <value condition="ListItem.IsResumable + Integer.IsGreater(ListItem.PercentPlayed,66)">indicator/inprogress-75.png</value>
        <value condition="ListItem.IsResumable + Integer.IsGreater(ListItem.PercentPlayed,33)">indicator/inprogress-50.png</value>
        <value condition="ListItem.IsResumable">indicator/inprogress-25.png</value>
        <value condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png) | [Integer.IsGreater(ListItem.PlayCount,0) + !String.IsEqual(ListItem.DBType,song) + !String.IsEqual(ListItem.DBType,album) + !String.IsEqual(ListItem.DBType,artist) + !String.IsEqual(ListItem.DBType,image) + !String.IsEqual(ListItem.DBType,addon)]">indicator/checkmark-fo.png</value>
        <value condition="[String.StartsWith(ListItem.Overlay,OverlayUnwatched.png) + [[String.IsEqual(ListItem.DBType,movie) + [String.IsEqual(Window(Home).Property(LatestMovie.1.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.2.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.3.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.4.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.5.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.6.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.7.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.8.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.9.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.10.Title),ListItem.Label)]] | [[String.IsEqual(ListItem.DBType,tvshow)] + [String.IsEqual(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.TvShowTitle)]] | [String.IsEqual(ListItem.DBType,episode) + [String.IsEqual(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem.Title)]]]]">indicator/new-fo.png</value>
        <value condition="String.StartsWith(ListItem.FolderPath,plugin://) + !String.IsEmpty(ListItem.DBID)">indicator/library.png</value>
        <value condition="ListItem.IsCollection">indicator/movieset.png</value>
        <value condition="String.IsEqual(ListItem.Label2,Enabled)">indicator/checkmark-fo.png</value>
        <value condition="String.EndsWith(ListItem.Label2, 67%) | String.EndsWith(ListItem.Label2, 68%) | String.EndsWith(ListItem.Label2, 69%) | String.EndsWith(ListItem.Label2, 70%) | String.EndsWith(ListItem.Label2, 71%) | String.EndsWith(ListItem.Label2, 72%) | String.EndsWith(ListItem.Label2, 73%) | String.EndsWith(ListItem.Label2, 74%) | String.EndsWith(ListItem.Label2, 75%) | String.EndsWith(ListItem.Label2, 76%) | String.EndsWith(ListItem.Label2, 77%) | String.EndsWith(ListItem.Label2, 78%) | String.EndsWith(ListItem.Label2, 79%) | String.EndsWith(ListItem.Label2, 80%) | String.EndsWith(ListItem.Label2, 81%) | String.EndsWith(ListItem.Label2, 82%) | String.EndsWith(ListItem.Label2, 83%) | String.EndsWith(ListItem.Label2, 84%) | String.EndsWith(ListItem.Label2, 85%) | String.EndsWith(ListItem.Label2, 86%) | String.EndsWith(ListItem.Label2, 87%) | String.EndsWith(ListItem.Label2, 88%) | String.EndsWith(ListItem.Label2, 89%) | String.EndsWith(ListItem.Label2, 90%) | String.EndsWith(ListItem.Label2, 91%) | String.EndsWith(ListItem.Label2, 92%) | String.EndsWith(ListItem.Label2, 93%) | String.EndsWith(ListItem.Label2, 94%) | String.EndsWith(ListItem.Label2, 95%) | String.EndsWith(ListItem.Label2, 96%) | String.EndsWith(ListItem.Label2, 97%) | String.EndsWith(ListItem.Label2, 98%) | String.EndsWith(ListItem.Label2, 99%) | String.EndsWith(ListItem.Label2, 100%)">indicator/inprogress-75.png</value>
        <value condition="String.EndsWith(ListItem.Label2, 34%) | String.EndsWith(ListItem.Label2, 35%) | String.EndsWith(ListItem.Label2, 36%) | String.EndsWith(ListItem.Label2, 37%) | String.EndsWith(ListItem.Label2, 38%) | String.EndsWith(ListItem.Label2, 39%) | String.EndsWith(ListItem.Label2, 40%) | String.EndsWith(ListItem.Label2, 41%) | String.EndsWith(ListItem.Label2, 42%) | String.EndsWith(ListItem.Label2, 43%) | String.EndsWith(ListItem.Label2, 44%) | String.EndsWith(ListItem.Label2, 45%) | String.EndsWith(ListItem.Label2, 46%) | String.EndsWith(ListItem.Label2, 47%) | String.EndsWith(ListItem.Label2, 48%) | String.EndsWith(ListItem.Label2, 49%) | String.EndsWith(ListItem.Label2, 50%) | String.EndsWith(ListItem.Label2, 51%) | String.EndsWith(ListItem.Label2, 52%) | String.EndsWith(ListItem.Label2, 53%) | String.EndsWith(ListItem.Label2, 54%) | String.EndsWith(ListItem.Label2, 55%) | String.EndsWith(ListItem.Label2, 56%) | String.EndsWith(ListItem.Label2, 57%) | String.EndsWith(ListItem.Label2, 58%) | String.EndsWith(ListItem.Label2, 59%) | String.EndsWith(ListItem.Label2, 60%) | String.EndsWith(ListItem.Label2, 61%) | String.EndsWith(ListItem.Label2, 62%) | String.EndsWith(ListItem.Label2, 63%) | String.EndsWith(ListItem.Label2, 64%) | String.EndsWith(ListItem.Label2, 65%) | String.EndsWith(ListItem.Label2, 66%)">indicator/inprogress-50.png</value>
        <value condition="String.EndsWith(ListItem.Label2, 0%) | String.EndsWith(ListItem.Label2, 1%) | String.EndsWith(ListItem.Label2, 2%) | String.EndsWith(ListItem.Label2, 3%) | String.EndsWith(ListItem.Label2, 4%) | String.EndsWith(ListItem.Label2, 5%) | String.EndsWith(ListItem.Label2, 6%) | String.EndsWith(ListItem.Label2, 7%) | String.EndsWith(ListItem.Label2, 8%) | String.EndsWith(ListItem.Label2, 9%) | String.EndsWith(ListItem.Label2, 10%) | String.EndsWith(ListItem.Label2, 11%) | String.EndsWith(ListItem.Label2, 12%) | String.EndsWith(ListItem.Label2, 13%) | String.EndsWith(ListItem.Label2, 14%) | String.EndsWith(ListItem.Label2, 15%) | String.EndsWith(ListItem.Label2, 16%) | String.EndsWith(ListItem.Label2, 17%) | String.EndsWith(ListItem.Label2, 18%) | String.EndsWith(ListItem.Label2, 19%) | String.EndsWith(ListItem.Label2, 20%) | String.EndsWith(ListItem.Label2, 21%) | String.EndsWith(ListItem.Label2, 22%) | String.EndsWith(ListItem.Label2, 23%) | String.EndsWith(ListItem.Label2, 24%) | String.EndsWith(ListItem.Label2, 25%) | String.EndsWith(ListItem.Label2, 26%) | String.EndsWith(ListItem.Label2, 27%) | String.EndsWith(ListItem.Label2, 28%) | String.EndsWith(ListItem.Label2, 29%) | String.EndsWith(ListItem.Label2, 30%) | String.EndsWith(ListItem.Label2, 31%) | String.EndsWith(ListItem.Label2, 32%) | String.EndsWith(ListItem.Label2, 33%)">indicator/inprogress-25.png</value>
    </variable>
    <variable name="Image_Overlay_Corner">
        <value condition="String.StartsWith(ListItem.FolderPath,plugin://) + !String.IsEmpty(ListItem.DBID)">indicator/corner.png</value>
        <!-- <value condition="ListItem.IsPlaying">indicator/corner.png</value> -->
        <value condition="ListItem.IsResumable">indicator/corner.png</value>
        <value condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png) | [Integer.IsGreater(ListItem.PlayCount,0) + !String.IsEqual(ListItem.DBType,song) + !String.IsEqual(ListItem.DBType,album) + !String.IsEqual(ListItem.DBType,artist) + !String.IsEqual(ListItem.DBType,image) + !String.IsEqual(ListItem.DBType,addon)]">indicator/corner.png</value>
        <value condition="[String.StartsWith(ListItem.Overlay,OverlayUnwatched.png) + [[String.IsEqual(ListItem.DBType,movie) + [String.IsEqual(Window(Home).Property(LatestMovie.1.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.2.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.3.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.4.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.5.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.6.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.7.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.8.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.9.Title),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestMovie.10.Title),ListItem.Label)]] | [[String.IsEqual(ListItem.DBType,tvshow)] + [String.IsEqual(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.TvShowTitle) | String.IsEqual(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.TvShowTitle)]] | [String.IsEqual(ListItem.DBType,episode) + [String.IsEqual(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem.Title) | String.IsEqual(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem.Title)]]]]">indicator/corner.png</value>
        <value condition="ListItem.IsCollection">indicator/corner.png</value>
        <value condition="Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0) + [String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,season)]">indicator/corner.png</value>
        <value condition="String.IsEqual(ListItem.Label2,Enabled)">indicator/corner.png</value>
        <value condition="!String.IsEmpty(ListItem.Label2) + Window.Isvisible(AddonBrowser.xml)">indicator/corner.png</value>
    </variable>

    <variable name="Image_Poster">
        <value condition="!String.IsEmpty(ListItem.Art(season.poster)) + !Window.IsVisible(Home)">$INFO[ListItem.Art(season.poster)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
        <value>$INFO[ListItem.Icon]</value>
    </variable>
    <variable name="Image_Cases">
        <value condition="SubString(ListItem.Filename,.3D.)">3d.png</value>
        <value condition="ListItem.IsCollection">set.png</value>
        <value condition="Container.Content(tvshows) | Container.Content(seasons)">tv.png</value>
        <value condition="SubString(ListItem.VideoResolution,4k)">4k.png</value>
        <value>$INFO[ListItem.VideoResolution]p.png</value>
    </variable>
    <variable name="Image_Banner">
        <value condition="!String.IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.banner))">$INFO[ListItem.Art(tvshow.banner)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value>$INFO[ListItem.Icon]</value>
    </variable>
    
    <variable name="Image_Landscape">
        <value condition="Container.Content(images)">$INFO[ListItem.Icon]</value>
        <value condition="!String.IsEmpty(ListItem.Art(thumb)) + [String.IsEqual(ListItem.DBType,episode) | String.IsEqual(ListItem.DBType,video)] + String.IsEmpty(ListItem.Property(airday))">$INFO[ListItem.Art(thumb)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(landscape)) + !Skin.HasSetting(DisableLandscapeArt)">$INFO[ListItem.Art(landscape)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.landscape)) + !Skin.HasSetting(DisableLandscapeArt)">$INFO[ListItem.Art(tvshow.landscape)]</value>
        <value condition="!String.IsEmpty(ListItem.Property(fanart))">$INFO[ListItem.Property(fanart)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(ListItem.Thumb)">$INFO[ListItem.Thumb]</value>
        <value condition="!String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
        <value>$INFO[ListItem.Icon]</value>
    </variable>

    <variable name="Image_Fanart">
        <value condition="Container.Content(images)">$INFO[ListItem.Icon]</value>
        <value condition="!String.IsEmpty(ListItem.Property(fanart))">$INFO[ListItem.Property(fanart)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value>$INFO[ListItem.Icon]</value>
    </variable>
</includes>
