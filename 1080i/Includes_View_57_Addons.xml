<?xml version="1.0" encoding="UTF-8"?>
<includes>
    <include name="View_57_Addons">
        <control type="group">
            <visible>Control.IsVisible(57)</visible>
            <include>Animation_Down</include>
            <include content="Viewtype_Square">
                <param name="id" value="57" />
                <param name="altid" value="570" />
                <param name="viewtype-label" value="$LOCALIZE[31237]" />
                <left>-80</left>
                <right>-80</right>
                <bottom>-20</bottom>
                <pagecontrol>60</pagecontrol>
                <onfocus>ClearProperty(TMDbHelper.WidgetContainer,Home)</onfocus>
                <include>Viewtype_Movement</include>
                <visible>[Container.Content(addons) + String.IsEmpty(Container.PluginName)] | Container.Content(albums) | Container.Content(images) | [Container.Content(musicvideos) + Window.IsVisible(MyMusicNav.xml)]</visible>
                <visible>!Window.IsVisible(MyPlaylist.xml)</visible>
            </include>
            <include content="Home_Hub_Widget_Label">
                <param name="id" value="57" />
                <param name="altid" value="570" />
                <param name="label" value="$VAR[Label_Header_Center]" />
                <param name="altlabel" value="$INFO[Control.GetLabel(3),, ]$INFO[Control.GetLabel(4)]" />
            </include>
        </control>
    </include>

    <include name="View_57_Addons_OnFocus">
        <onfocus condition="!String.IsEmpty(Window.Property(movedown))">Down</onfocus>
        
        <onfocus condition="!String.IsEmpty(Window.Property(moveup))">Up</onfocus>
        
        <onfocus condition="!String.IsEmpty(Window.Property(moveright))">Right</onfocus>
        <onfocus condition="!String.IsEmpty(Window.Property(moveright)) + Container($PARAM[id]).HasNext">Right</onfocus>
        <onfocus condition="!String.IsEmpty(Window.Property(moveright)) + Container($PARAM[id]).HasNext">Right</onfocus>
        <onfocus condition="!String.IsEmpty(Window.Property(moveright)) + Container($PARAM[id]).HasNext">Right</onfocus>
        <onfocus condition="!String.IsEmpty(Window.Property(moveright)) + Container($PARAM[id]).HasNext">Right</onfocus>
        <onfocus condition="!String.IsEmpty(Window.Property(moveright)) + Container($PARAM[id]).HasNext">Right</onfocus>
        <onfocus condition="!String.IsEmpty(Window.Property(moveright)) + Container($PARAM[id]).HasNext">Left</onfocus>
        <onfocus condition="!String.IsEmpty(Window.Property(moveright)) + Container($PARAM[id]).HasNext">Left</onfocus>
        <onfocus condition="!String.IsEmpty(Window.Property(moveright)) + Container($PARAM[id]).HasNext">Left</onfocus>
        <onfocus condition="!String.IsEmpty(Window.Property(moveright)) + Container($PARAM[id]).HasNext">Left</onfocus>
        <onfocus condition="!String.IsEmpty(Window.Property(moveright)) + Container($PARAM[id]).HasNext">Left</onfocus>

        <onfocus condition="!String.IsEmpty(Window.Property(moveleft))">Left</onfocus>
        
        <onfocus condition="!String.IsEmpty(Window.Property(oninfo))">ClearProperty(oninfo)</onfocus>
        <onfocus condition="!String.IsEmpty(Window.Property(oninfo))">Action(Info)</onfocus>
        <onfocus condition="!String.IsEmpty(Window.Property(onclick))">ClearProperty(onclick)</onfocus>
        <onfocus condition="!String.IsEmpty(Window.Property(onclick))">Action(Select)</onfocus>
        <onfocus condition="!String.IsEmpty(Window.Property(onback))">ClearProperty(onback)</onfocus>
        <onfocus condition="!String.IsEmpty(Window.Property(onback))">Action(Back)</onfocus>

        <onfocus condition="String.IsEmpty(Window.Property(movedown)) + String.IsEmpty(Window.Property(moveup)) + String.IsEmpty(Window.Property(moveright)) + String.IsEmpty(Window.Property(moveleft)) + Container($PARAM[id]).HasNext">Control.Move($PARAM[id],6)</onfocus>
        <onfocus condition="String.IsEmpty(Window.Property(movedown)) + String.IsEmpty(Window.Property(moveup)) + String.IsEmpty(Window.Property(moveright)) + String.IsEmpty(Window.Property(moveleft)) + Container($PARAM[id]).HasNext">Control.Move($PARAM[id],-6)</onfocus>

        <onfocus condition="String.IsEmpty(Window.Property(onclick)) + String.IsEmpty(Window.Property(onback))">SetFocus($PARAM[id]0)</onfocus>
    </include>

    <include name="View_57_Addons_SelectBox">
        <control type="button" id="$PARAM[id]0">
            <include>Defs_Hidden_Button</include>
            <onup condition="Container($PARAM[id]).Row(0)">304</onup>
            <onup condition="!Container($PARAM[id]).Row(0)">SetProperty(moveup,1)</onup>
            <onup condition="!Container($PARAM[id]).Row(0)">SetFocus($PARAM[id])</onup>
            <ondown condition="!Container($PARAM[id]).Row($PARAM[lastrow])">SetProperty(movedown,1)</ondown>
            <ondown condition="!Container($PARAM[id]).Row($PARAM[lastrow])">SetFocus($PARAM[id])</ondown>
            <ondown condition="Container($PARAM[id]).Row($PARAM[lastrow])">SetFocus(60)</ondown>
            <onright>SetProperty(moveright,1)</onright>
            <onright>SetFocus($PARAM[id])</onright>
            <onleft>SetProperty(moveleft,1)</onleft>
            <onleft>SetFocus($PARAM[id])</onleft>
            <onfocus>ClearProperty(moveup)</onfocus>
            <onfocus>ClearProperty(movedown)</onfocus>
            <onfocus>ClearProperty(moveright)</onfocus>
            <onfocus>ClearProperty(moveleft)</onfocus>
            <onfocus>ClearProperty(onclick)</onfocus>
            <onfocus>ClearProperty(oninfo)</onfocus>
            <onclick>SetProperty(onclick,1)</onclick>
            <onclick>SetFocus($PARAM[id])</onclick>
            <oninfo>SetProperty(oninfo,1)</oninfo>
            <oninfo>SetFocus($PARAM[id])</oninfo>
            <onback>SetProperty(onback,1)</onback>
            <onback>$PARAM[id]</onback>
        </control>

        <control type="group">
            <nested />
            <left>-20</left>
            <bottom>-20</bottom>
            <width>item_square_width</width>
            <animation effect="slide" start="-300" end="0" tween="quadratic" condition="String.IsEmpty(Window.Property(moveleft)) + Container($PARAM[id]).Column(0)" reversible="false" time="400">Conditional</animation>
            <animation effect="slide" start="300" end="0" tween="quadratic" condition="String.IsEmpty(Window.Property(moveright)) + Container($PARAM[id]).Column(0)" reversible="false" time="400">Conditional</animation>
            <animation effect="slide" end="300" condition="Container($PARAM[id]).Column(1)">Conditional</animation>
            <animation effect="slide" end="600" condition="Container($PARAM[id]).Column(2)">Conditional</animation>
            <animation effect="slide" end="900" condition="Container($PARAM[id]).Column(3)">Conditional</animation>
            <animation effect="slide" end="1200" condition="Container($PARAM[id]).Column(4)">Conditional</animation>
            <animation effect="slide" end="1500" condition="Container($PARAM[id]).Column(5)">Conditional</animation>
            <animation effect="slide" end="1800" condition="Container($PARAM[id]).Column(6)">Conditional</animation>
            <control type="group">
                <animation type="Conditional" condition="!Control.HasFocus($PARAM[id]1) + !Control.HasFocus($PARAM[id]2)" reversible="false">
                    <effect type="zoom" start="96.5" end="100" time="150" tween="sine" easing="inout" center="auto"/>
                    <effect type="fade" start="20" end="100" time="150" tween="back" easing="out"/>
                </animation>
                <top>5</top>
                <bottom>5</bottom>
                <left>5</left>
                <right>5</right>
                <include content="View_Selectbox">
                    <visible>Control.HasFocus($PARAM[id]0) | Control.HasFocus($PARAM[id]1) | Control.HasFocus($PARAM[id]2)</visible>
                </include>
            </control>
        </control>
    </include>
</includes>

